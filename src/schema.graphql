# import * from './generated/prisma.graphql'

enum CaseResult {
  DEATH
  RECOVERY
}

type LatestResult {
  confirmed: Int!
  recoveries: Int!
  deaths: Int!
  lastUpdated: DateTime!
}

type ResultDelta {
  confirmed: Int!
  recoveries: Int!
  deaths: Int!
}

type StateResult {
  state: String!
  confirmed: Int!
  recoveries: Int!
  deaths: Int!
}

type DailyResult {
  confirmed: Int!
  recoveries: Int!
  deaths: Int!
  date: DateTime!
}

type Query {
  latest: LatestResult!
  todaysCases: ResultDelta!
  resultsByState: [StateResult]!
  trend: [DailyResult]!

  state(where: StateWhereUniqueInput!): State
  states(where: StateWhereInput, orderBy: StateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [State]!
  statesConnection(where: StateWhereInput, orderBy: StateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StateConnection!

  timeline(where: TimelineWhereUniqueInput!): Timeline
  timelines(where: TimelineWhereInput, orderBy: TimelineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Timeline]!
  timelinesConnection(where: TimelineWhereInput, orderBy: TimelineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TimelineConnection!

}